apply plugin: 'groovy'
apply plugin: 'maven'

def defaultVersion = '0.0.1-SNAPSHOT'

def compatibilityVersion = 1.5
sourceCompatibility = compatibilityVersion
targetCompatibility = compatibilityVersion

group = 'murtools'
version = System.properties['production.ver'] ?: defaultVersion

configurations {
    publisher {
        description = 'libraries to publish the artifacts to the repository'
    }
}

repositories {
    mavenCentral()
}

dependencies {
    compile localGroovy()
    compile gradleApi()

    testCompile 'org.scalatra.scalate:scalate-core_2.11:1.7.1'
    publisher 'org.apache.maven.wagon:wagon-webdav:1.0-beta-2'
}

jar {
    manifest {
        attributes 'Implementation-Title': 'Gradle Scalate plugin',
                   'Implementation-Version': version,
                   'Built-By': 'ryo-murai',
                   'Built-Date': new Date(),
                   'Built-JDK': System.getProperty('java.version'),
                   'Built-Gradle': gradle.gradleVersion
    }
}

uploadArchives {
    def credDir = System.properties['credentialPlace']
    if(credDir != null) {
        def propFile = new File(credDir, 'credentials.properties')
        def cred = new ConfigSlurper().parse(propFile.toURL())
        repositories.mavenDeployer {
            configuration = configurations.publisher
            repository(url: 'dav:https://repository-rmci.forge.cloudbees.com/release/') {
                authentication(userName: cred.publish.user, password: cred.publish.password)
            }
        }
    } else {
        doLast {
            println '''
            * * * NOTE: uploadArchives is disabled. * * *
            to enable this, you need :
             - edit `credentials.properties` file describes repository credential for upload like
                    publish {
                      user = 'your user account id'
                      password = 'your password'
                    }
             - passing -DcredentialPlace=(where the credential.properties located) to your gradle command option
            '''
        }
    }
}

task testprojectTest(type: GradleBuild) {
    dir = file('testproject')
    buildFile = file('testproject/build.gradle')
    tasks = ['clean', 'scalatePreCompile', 'test']
}

test {
    dependsOn(testprojectTest)
    jvmArgs '-Xmx=1024m -XX:MaxPermSize=256m'
}
